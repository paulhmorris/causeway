name: Deploy Preview
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - staging

jobs:
  lint:
    name: ‚ú® Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.15.0
          cache: "npm"
      - run: npm ci
      - run: npm run typegen
      - run: npm run lint

  typecheck:
    name: üß† Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.15.0
          cache: "npm"
      - run: npm ci
      - run: npm run typegen
      - run: npm run typecheck

  deploy:
    name: üöß Deploy Preview
    runs-on: ubuntu-latest
    environment: preview
    needs: [lint, typecheck]
    outputs:
      deployment-url: ${{ steps.deploy.outputs.deployment-url }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.15.0
          cache: "npm"

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Apply pending migrations to the database
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          DEPLOYMENT_URL=$(vercel deploy --archive=tgz --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "deployment-url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT

  test:
    name: üë∑üèº‚Äç‚ôÇÔ∏è E2E Tests
    needs: deploy
    timeout-minutes: 60
    environment: preview
    runs-on: ubuntu-latest
    env:
      DIRECT_URL: ${{ secrets.DIRECT_URL }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      PLAYWRIGHT_TEST_BASE_URL: ${{ needs.deploy.outputs.deployment-url }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - name: Install Browsers
        run: npx playwright install --with-deps

      - name: Run tests
        run: npm run test:e2e

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
